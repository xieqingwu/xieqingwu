git svn clone svn: 
git remote add ssh://toc@10.135.0.179/home/toc/gznx.xqw.git

1）下载repo文件 
wget http://mirrors.aliyun.com/repo/Centos-7.repo

2）备份并替换系统的repo文件 
cp Centos-7.repo /etc/yum.repo.d/ 
cd /etc/yum.repos.d/ 
mv CentOS-Base.repo CentOS-Base.repo.bak 
mv Centos-7.repo CentOS-Base.repo

3）执行yum源更新命令 
yum clean all 
yum makecache 
yum update

ln -s /opt/dmzlog/tmp/ /root/lntest/dist/

1、查看系统默认安装的yum

# rpm -qa|grep yum



cat 原始文件列表 > 单一文件
 
iconv -cf GBK customer.del | sed -e 's|\^+\^|\n|g' | sed -e 's|\s*\$#\$\s*|$#$|g' | sed -e 's|\s*$||' > customer20170412.del

cat customer.del | sed -e 's|\^+\^|\n|g' | sed -e 's|\s*\$#\$\s*|$#$|g' | sed -e 's|\s*$||' > customer.del
 loan_ggyd_20170328_220.del
iconv -cf GBK loan_ggyd_20170328_220.del | sed -e 's|\^+\^|\n|g' | sed -e 's|\s*\$#\$\s*|$#$|g' | sed -e 's|\s*$||' > customer2.del


sed s/[[:space:]]//g

查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断
select * from people
where peopleId in (select   peopleId from   people group by   peopleId having count

(peopleId) > 1)

2、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录
delete from people
where peopleId in (select   peopleId from people group by   peopleId   having count

(peopleId) > 1)
and rowid not in (select min(rowid) from   people group by peopleId having count(peopleId

)>1)

3、查找表中多余的重复记录（多个字段）
select * from vitae a
where (a.peopleId,a.seq) in   (select peopleId,seq from vitae group by peopleId,seq having

count(*) > 1)

4、删除表中多余的重复记录（多个字段），只留有rowid最小的记录
delete from vitae a
where (a.peopleId,a.seq) in   (select peopleId,seq from vitae group by peopleId,seq having

count(*) > 1)
and rowid not in (select min(rowid) from vitae group by peopleId,seq having count(*)>1)

5、查找表中多余的重复记录（多个字段），不包含rowid最小的记录
select * from vitae a
where (a.peopleId,a.seq) in   (select peopleId,seq from vitae group by peopleId,seq having

count(*) > 1)
and rowid not in (select min(rowid) from vitae group by peopleId,seq having count(*)>

增加一列：

   alter table imp_ay_customer add telephone varchar2(20);
   alter table imp_ay_customer add address varchar2(20);

修改一列：

   alter table emp4 modify test varchar2(20);

删除一列：

alter table emp4 drop column test;
Oracle用户下执行：
$ sqlplus system/manager @ file.sql 执行sql脚本文件
$ sqlplus system/manager 登录sqlplus，使用system用户
$ sqlplus /nolog 以不连接数据库的方式启动sqlplus，启动数据时会用到
$ lsnrctl status/stop/start oracle的监听器listener状态查看/停止/启动
$ imp system/manager file=/tmp/expfile.dmp log=/tmp/implogfile.log ignore=y fromuser=expuser touser=impuser 用户模式表数据导入，这里我只使用了几个参数，还有好多没有用到的参数，如果没有特别指定值，就使用默认的值。
$ exp username/password file=/tmp/expfile.dmp log=/tmp/proV114_exp.log 用户模式表数据导出，这是最简单的导出方法，还有好多参数没有写出来。
 
 
 1，将数据库ORACLE完全导出,用户名system密码manager 导出到c:\daochu.dmp中

exp system/manager@ORACLE file=c:\daochu.dmp full=y

2，将数据库中RFD用户与,JYZGCX用户的表导出

ssh -L 0.0.0.0:1521:localhost:1521 db

exp system/manager@ORACLE file=d:\daochu.dmpowner=(RFD,JYZGCX)


Sqlplus下执行：
SQL> conn / as sysdba sysdba用户模式连接
SQL> startup 启动数据库
SQL> shutdown immediate 立即关闭数据库
SQL> desc dba_users; 查询dba_users表结构
SQL> select username from dba_users; 查询当前sid下的所有用户的username
SQL> select count(*) from username.tablename; 查询tablename表的行数
SQL> drop user username cascade; 删除名称为username的oracle用户
SQL> select distinct table_name from user_tab_columns; 查看当前user模式下所有表名 ~~~~~~今就想到这些，先写到这，呵呵~~~

1.连接到Linux服务器(输入服务器的ip地址) 
ssh 10.199.94.227 
 
连接成功后会提示输入密码，输入成功会提示。 
 
2.切换到操作Oracle数据库 
su - oracle 
 
切换成功会提示相关数据库的实例。例如：oracle@linux-cg01:~>  
 
3.切换到sqlplus操作 
sqlplus /nolog 
 
切换成功会提示相关的提示：例如： 
 
SQL*Plus: Release 11.2.0.2.0 Production on Thu Jan 19 11:19:48 2012 
 
Copyright (c) 1982, 2010, Oracle.  All rights reserved. 
 
4.输入数据库的用户名和密码 
conn personal/personal 
 
5.会提示Connected.(连接成功)，显示 SQL> ： 
 
6.以下是相关的SQL语句操作： 
 
(1) 查询的语句后面要一定要加 ; ，否则不能执行查询，相当于plsqldev.exe工具的命令窗口的操作 
 
select *from newuseraccount （记得查询的时候一定要加;） 
 
select email,password from userreg where  accountstype=1  and userstate=1; 
 
(2)插入或更新的语句记得还要加提交语句,才能提交事务。相当于plsqldev.exe工具的命令窗口的操作。 
 
update newuseraccount set address='20-青海-0-西宁市' where userid=638 ; 
commit ; 

select count(*) from v$process;

select value from v$parameter where name ='processes';


alter user sh account unlock; --解开LOCKED

sys@TESTDB> alter user sh identified by sh;

select username,account_status from dba_users; 

--查看被锁的表 
select b.owner,b.object_name,a.session_id,a.locked_mode from v$locked_object a,dba_objects b where b.object_id = a.object_id;

--查看那个用户那个进程照成死锁
select b.username,b.sid,b.serial#,logon_time from v$locked_object a,v$session b where a.session_id = b.sid order by b.logon_time;

--查看连接的进程 
SELECT sid, serial#, username, osuser FROM v$session;

--3.查出锁定表的sid, serial#,os_user_name, machine_name, terminal，锁的type,mode
SELECT s.sid, s.serial#, s.username, s.schemaname, s.osuser, s.process, s.machine,
s.terminal, s.logon_time, l.type
FROM v$session s, v$lock l
WHERE s.sid = l.sid
AND s.username IS NOT NULL
ORDER BY sid;

这个语句将查找到数据库中所有的DML语句产生的锁，还可以发现，
任何DML语句其实产生了两个锁，一个是表锁，一个是行锁。

--杀掉进程 sid,serial#
alter system kill session'210,11562';

select * from table where 日期>add_months(sysdate,-1)


select to_char(sysdate,'yyyy-mm-dd hh24:mi:ss') from dual;  --显示当前时间
2011-12-29 16:24:34

select trunc(sysdate,'year') from dual; --截取到年（本年的第一天）
2011-1-1

select trunc(sysdate,'q') from dual; --截取到季度（本季度的第一天）
2011-10-1

select trunc(sysdate,'month') from dual; --截取到月（本月的第一天）
2011-12-1

select trunc(sysdate,'') from dual; 
空

select to_char(trunc(sysdate),'yyyymmdd hh24:mi:ss') from dual; --默认截取到日（当日的零点零分零秒）
20111229 00:00:00

select trunc(sysdate-1,'w') from dual;  -- 离当前时间最近的周四，若当天为周四则返回当天，否则返回上周四
2011-12-22

select trunc(sysdate,'ww') from dual;  --截取到上周末（上周周六）
2011-12-24

select trunc(sysdate,'day') from dual; --截取到周（本周第一天，即上周日）
2011-12-25

select trunc(sysdate,'iw') from dual; --本周第2天，即本周一
2011-12-26

select to_char(trunc(sysdate,'dd'),'yyyymmdd hh24:mi:ss') from dual;--截取到日（当日的零点零分零秒）
20111229 00:00:00

select trunc(sysdate,'hh24') from dual;  --截取到小时（当前小时，零分零秒）
2011-12-29 16:00:00

select trunc(sysdate,'mi') from dual; --截取到分（当前分，零秒）
2011-12-29 16:24:00

select trunc(sysdate,'ss') from dual ;--报错，没有精确到秒的格式


一、oracle sql日期比较
 
在今天之前:select * from up_date where update < to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
select * from up_date where update <= to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
在今天只后:select * from up_date where update > to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
select * from up_date where update >= to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
精确时间:select * from up_date where update = to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
在某段时间内:select * from up_date where update between to_date('2007-07-07 00:00:00','yyyy-mm-dd hh24:mi:ss') and to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
select * from up_date where update < to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss') and update > to_date('2007-07-07 00:00:00','yyyy-mm-dd hh24:mi:ss')
select * from up_date where update <= to_date('2007-09-07 00:00:00','yyyy-mm-dd hh24:mi:ss') and update >= to_date('2007-07-07 00:00:00','yyyy-mm-dd hh24:二、Oracle 获取当前日期及日期格式   获取系统日期：  SYSDATE()
   格式化日期：     TO_CHAR(SYSDATE(),'YY/MM/DD HH24:MI:SS)
                      或 TO_DATE(SYSDATE(),'YY/MM/DD HH24:MI:SS)
   格式化数字：      TO_NUMBER
 
 
               注： TO_CHAR  把日期或数字转换为字符串 
                                 TO_CHAR(number, '格式') 
                                 TO_CHAR(salary, '$99,999.99') 
                                 TO_CHAR(date, '格式')
                      TO_DATE  把字符串转换为数据库中的日期类型
                                 TO_DATE(char, '格式')
                      TO_NUMBER  将字符串转换为数字 
                                  TO_NUMBER(char, '格式')
 
返回系统日期,输出 25-12月-09
select sysdate from dual;
mi是分钟，输出 2009-12-25 14:23:31
select to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') from dual;
mm会显示月份，输出 2009-12-25 14:12:31 
select to_char(sysdate,'yyyy-MM-dd HH24:mm:ss') from dual;
输出 09-12-25 14:23:31
select to_char(sysdate,'yy-mm-dd hh24:mi:ss') from dual  
输出 2009-12-25 14:23:31
 
 
select to_date('2009-12-25 14:23:31','yyyy-mm-dd,hh24:mi:ss') from dual 
而如果把上式写作：
 select to_date('2009-12-25 14:23:31','yyyy-mm-dd,hh:mi:ss') from dual
则会报错，因为小时hh是12进制，14为非法输入，不能匹配。
输出 $10,000,00 ：
select to_char(1000000,'$99,999,99') from dual;
输出 RMB10,000,00 ： 
select to_char(1000000,'L99,999,99') from dual;
输出 1000000.12 ：
select trunc(to_number('1000000.123'),2) from dual;
select to_number('1000000.123') from dual;
转换的格式：
表示 year 的：y 表示年的最后一位 、
                     yy 表示年的最后2位 、 
                     yyy 表示年的最后3位 、
                     yyyy 用4位数表示年
表示month的： mm 用2位数字表示月 、
                       mon 用简写形式， 比如11月或者nov 、
                       month 用全称， 比如11月或者november
表示day的：dd  表示当月第几天 、
                  ddd 表示当年第几天 、
                  dy  当周第几天，简写， 比如星期五或者fri 、
                  day 当周第几天，全称， 比如星期五或者friday
表示hour的：hh   2位数表示小时 12进制、 
                   hh24 2位数表示小时 24小时
表示minute的：mi 2位数表示分钟
表示second的：ss 2位数表示秒 60进制
表示季度的：q 一位数 表示季度 （1-4）
另外还有ww 用来表示当年第几周 w用来表示当月第几周。
24小时制下的时间范围：00：00：00-23：59：59
12小时制下的时间范围：1：00：00-12：59：59
数字格式:  9  代表一个数字 
               0  强制显示0 
               $  放置一个$符 
               L  放置一个浮动本地货币符 
               .  显示小数点 
               ,  显示千位指示符
补充：
当前时间减去7分钟的时间 
select sysdate,sysdate - interval '7' MINUTE from dual; 
当前时间减去7小时的时间 
select sysdate - interval '7' hour from dual; 
当前时间减去7天的时间 
select sysdate - interval '7' day from dual; 
当前时间减去7月的时间 
select sysdate,sysdate - interval '7' month from dual; 
当前时间减去7年的时间 
select sysdate,sysdate - interval '7' year from dual; 
时间间隔乘以一个数字 
select sysdate,sysdate - 8*interval '7' hour from dual;
含义解释： 
  Dual伪列
      Dual 是 Oracle中的一个实际存在的表，任何用户均可读取，常用在没有目标表的select语句块中。
      不同系统可能返回日期的格式不一样。
      返回当前连接的用户：select user from dual;三、前后第几天获取昨天：
 
 
select trunc(SYSDATE-1)  from dual;
 
 
检查一下：
 
 
select to_char (trunc(SYSDATE-1),'yyyy-mm-dd HH24:MI:SS') from dual;
 
 
获取上个月第一天00:00:00：
 
 
 select add_months(trunc(sysdate,'MON'),-1) from dual
 
 
 select add_months(trunc(sysdate,'MON'),-13) from dual也可以
 
 
获取上个月今天00:00:00：
 
 
SELECT trunc(add_months(sysdate,-1))FROM dual
 
 
获得本季度第一天
 
 
SELECT TRUNC(add_months(SYSDATE,0),'Q') FROM dual
 
 
获得上季度第一天
 
 
SELECT TRUNC(add_months(SYSDATE,-3),'Q') FROM dual
 
 
获得去年1月1日
 
 
to_char(add_months(trunc(sysdate, 'Year'), -12), 'YYYY-MM-DD')
 
 
between and 前面的时间小后面的时间大
 
 
to_date('20110105','YYYYMMDD')-7 此处 -7代表天
四、Oracle时间函数常用的时间格式 在oracle中有 yyyy-mm-dd hh24:mi:ss  而在Java中有些区别 为yyyy-MM-dd HH:mm:ss;
to_char(sysdate,'yyyy/mm/dd hh24:mi:ss')
 
常用函数及示例：1。Sysdate 当前日期和时间
SQL> Select sysdate from dual;
 
 
SYSDATE
----------
21-6月 -05
 
 
2。Last_day 本月最后一天 
SQL> Select last_day(sysdate) from dual;
 
 
LAST_DAY(S
----------
30-6月 -05
 
 
3。Add_months(d,n) 当前日期d后推n个月 
用于从一个日期值增加或减少一些月份 
date_value:=add_months(date_value,number_of_months)
 
 
SQL> Select add_months(sysdate,2) from dual;
 
 
ADD_MONTHS
----------
21-8月 -05
 
 
4。Months_between(f,s) 日期f和s间相差月数 
SQL> select months_between(sysdate,to_date('2005-11-12','yyyy-mm-dd'))from dual;
 
 
MONTHS_BETWEEN(SYSDATE,TO_DATE('2005-11-12','YYYY-MM-DD'))
----------------------------------------------------------
                                                -4.6966741 
 
 
5。NEXT_DAY(d, day_of_week)
返回由"day_of_week"命名的，在变量"d"指定的日期之后的第一个工作日的日期。参数"day_of_week"必须为该星期中的某一天。
SQL> SELECT next_day(to_date('20050620','YYYYMMDD'),1) FROM dual;
 
 
NEXT_DAY(T
----------
26-6月 -05
 
 
6。current_date()返回当前会话时区中的当前日期 
date_value:=current_date 
SQL> column sessiontimezone for a15 
SQL> select sessiontimezone,current_date from dual; 
 
 
SESSIONTIMEZONE CURRENT_DA 
--------------- ---------- 
+08:00          13-11月-03 
   
SQL> alter session set time_zone='-11:00' 2  / 
会话已更改。 
   
SQL> select sessiontimezone,current_timestamp from dual; 
 
 
SESSIONTIMEZONE CURRENT_TIMESTAMP 
--------------- ------------------------------------ 
-11:00          12-11月-03 04.59.13.668000 下午 -11:00 
 
 
7。current_timestamp()以timestamp with time zone数据类型返回当前会话时区中的当前日期
SQL> select current_timestamp from dual;
 
 
CURRENT_TIMESTAMP
---------------------------------------------------------------------------
21-6月 -05 10.13.08.220589 上午 +08:00
 
 
8。dbtimezone()返回时区
SQL> select dbtimezone from dual;
 
 
DBTIME
------
-08:00
 
 
9。extract()找出日期或间隔值的字段值 
date_value:=extract(date_field from [datetime_value|interval_value]) 
SQL> select extract(month from sysdate) "This Month" from dual;
 
 
This Month
----------
         6
 
 
SQL> select extract(year from add_months(sysdate,36)) " Years" from dual;
 
 
     Years
----------
      2008
 
 
10。localtimestamp()返回会话中的日期和时间 
SQL> select localtimestamp from dual;
 
 
LOCALTIMESTAMP
---------------------------------------------------------------------------
21-6月 -05 10.18.15.855652 上午
 
 
常用日期数据格式（该段为摘抄）
 
 
Y或YY或YYY 年的最后一位，两位或三位 Select to_char(sysdate,’YYY’) from dual； 002表示2002年 
SYEAR或YEAR SYEAR使公元前的年份前加一负号 Select to_char(sysdate,’SYEAR’) from dual； -1112表示公元前111 2年 
Q 季度，1～3月为第一季度 Select to_char(sysdate,’Q’) from dual； 2表示第二季度① 
MM 月份数 Select to_char(sysdate,’MM’) from dual； 12表示12月 
RM 月份的罗马表示 Select to_char(sysdate,’RM’) from dual； IV表示4月 
Month 用9个字符长度表示的月份名 Select to_char(sysdate,’Month’) from dual； May后跟6个空格表示5月 
WW 当年第几周 Select to_char(sysdate,’WW’) from dual； 24表示2002年6月13日为第24周 
W 本月第几周 Select to_char(sysdate,’W’) from dual； 2002年10月1日为第1周 
DDD 当年第几, 1月1日为001，2月1日为032 Select to_char(sysdate,’DDD’) from dual； 363 2002年1 2月2 9日为第363天 
DD 当月第几天 Select to_char(sysdate,’DD’) from dual； 04 10月4日为第4天 
D 周内第几天 Select to_char(sysdate,’D’) from dual； 5 2002年3月14日为星期一 
DY 周内第几天缩写 Select to_char(sysdate,’DY’) from dual； SUN 2002年3月24日为星期天 
HH或HH12 12进制小时数 Select to_char(sysdate,’HH’) from dual； 02 午夜2点过8分为02 
HH24 24小时制 Select to_char(sysdate,’HH24’) from dual； 14 下午2点08分为14 
MI 分钟数(0～59) Select to_char(sysdate,’MI’) from dual； 17下午4点17分 
SS 秒数(0～59) Select to_char(sysdate,’SS’) from dual； 22 11点3分22秒 
提示注意不要将MM格式用于分钟(分钟应该使用MI)。MM是用于月份的格式，将它用于分钟也能工作，但结果是错误的。 
 
 
 
 
现在给出一些实践后的用法：
 
 
1。上月末天：
SQL> select to_char(add_months(last_day(sysdate),-1),'yyyy-MM-dd') LastDay from
dual;
 
 
LASTDAY
----------
2005-05-31
 
 
2。上月今天
SQL> select to_char(add_months(sysdate,-1),'yyyy-MM-dd') PreToday from dual;
 
 
 
 
PRETODAY
----------
2005-05-21
 
 
3.上月首天
SQL> select to_char(add_months(last_day(sysdate)+1,-2),'yyyy-MM-dd') firstDay from dual;
 
 
FIRSTDAY
----------
2005-05-01
 
 
4.按照每周进行统计
SQL> select to_char(sysdate,'ww') from dual group by to_char(sysdate,'ww');
 
 
TO
--
25
 
 
5。按照每月进行统计
SQL> select to_char(sysdate,'mm') from dual group by to_char(sysdate,'mm');
 
 
TO
--
06
 
 
6。按照每季度进行统计
SQL> select to_char(sysdate,'q') from dual group by to_char(sysdate,'q');
 
 
T
-
2
 
 
7。按照每年进行统计
SQL> select to_char(sysdate,'yyyy') from dual group by to_char(sysdate,'yyyy');
 
 
TO_C
----
2005
 
 
8.要找到某月中所有周五的具体日期 
select to_char(t.d,'YY-MM-DD') from ( 
select trunc(sysdate, 'MM')+rownum-1 as d 
from dba_objects 
where rownum < 32) t 
where to_char(t.d, 'MM') = to_char(sysdate, 'MM') --找出当前月份的周五的日期 
 
 
and trim(to_char(t.d, 'Day')) = '星期五' 
-------- 
03-05-02 
03-05-09 
03-05-16 
03-05-23 
03-05-30  
 
 
如果把where to_char(t.d, 'MM') = to_char(sysdate, 'MM')改成sysdate-90，即为查找当前月份的前三个月中的每周五的日期。
 
 
9.oracle中时间运算
 
 
内容如下： 
1、oracle支持对日期进行运算 
2、日期运算时是以天为单位进行的 
3、当需要以分秒等更小的单位算值时，按时间进制进行转换即可 
4、进行时间进制转换时注意加括号，否则会出问题 
 
 
SQL> alter session set nls_date_format='yyyy-mm-dd hh:mi:ss'; 
 
 
会话已更改。 
 
 
SQL> set serverout on 
SQL> declare 
  2 DateValue date; 
  3 begin 
  4 select sysdate into DateValue from dual; 
  5 dbms_output.put_line('源时间:'||to_char(DateValue)); 
  6 dbms_output.put_line('源时间减1天:'||to_char(DateValue-1)); 
  7 dbms_output.put_line('源时间减1天1小时:'||to_char(DateValue-1-1/24)); 
  8 dbms_output.put_line('源时间减1天1小时1分:'||to_char(DateValue-1-1/24-1/(24*60))); 
  9 dbms_output.put_line('源时间减1天1小时1分1秒:'||to_char(DateValue-1-1/24-1/(24*60)-1/(24*60*60))); 
10 end; 
11 / 
源时间:2003-12-29 11:53:41 
源时间减1天:2003-12-28 11:53:41 
源时间减1天1小时:2003-12-28 10:53:41 
源时间减1天1小时1分:2003-12-28 10:52:41 
源时间减1天1小时1分1秒:2003-12-28 10:52:40 
 
 
PL/SQL 过程已成功完成。
 
 
 
 
在Oracle中实现时间相加处理
-- 名称：Add_Times
-- 功能：返回d1与NewTime相加以后的结果，实现时间的相加
-- 说明：对于NewTime中的日期不予考虑
-- 日期：2004-12-07
-- 版本：1.0
-- 作者：Kevin
 
 
 
 
create or replace function Add_Times(d1 in date,NewTime in date) return date 
is
  hh   number;
  mm   number;
  ss   number;
  hours number;
  dResult  date;  
begin
  -- 下面依次取出时、分、秒
  select to_number(to_char(NewTime,'HH24')) into hh from dual;
  select to_number(to_char(NewTime,'MI')) into mm from dual;
  select to_number(to_char(NewTime,'SS')) into ss from dual;
  -- 换算出NewTime中小时总和，在一天的百分几
  hours := (hh + (mm / 60) + (ss / 3600))/ 24;
  -- 得出时间相加后的结果
  select d1 + hours into dResult from dual;
  return(dResult);
end Add_Times;
 
 
 
 
-- 测试用例
-- select Add_Times(sysdate,to_date('2004-12-06 03:23:00','YYYY-MM-DD HH24:MI:SS')) from dual
 
 
 
 
在Oracle9i中计算时间差
计算时间差是Oracle DATA数据类型的一个常见问题。Oracle支持日期计算，你可以创建诸如“日期1－日期2”这样的表达式来计算这两个日期之间的时间差。 
    
   
一旦你发现了时间差异，你可以使用简单的技巧来以天、小时、分钟或者秒为单位来计算时间差。为了得到数据差，你必须选择合适的时间度量单位，这样就可以进行数据格式隐藏。 
   
使用完善复杂的转换函数来转换日期是一个诱惑，但是你会发现这不是最好的解决方法。 
   
round(to_number(end-date-start_date))- 消逝的时间（以天为单位） 
   
round(to_number(end-date-start_date)*24)- 消逝的时间（以小时为单位） 
   
round(to_number(end-date-start_date)*1440)- 消逝的时间（以分钟为单位） 
   
显示时间差的默认模式是什么？为了找到这个问题的答案，让我们进行一个简单的SQL *Plus查询。 
   
SQL> select sysdate-(sysdate-3) from dual; 
   
SYSDATE-(SYSDATE-3) 
------------------- 
                   3  
   
这里，我们看到了Oracle使用天来作为消逝时间的单位，所以我们可以很容易的使用转换函数来把它转换成小时或者分钟。然而，当分钟数不是一个整数时，我们就会遇到放置小数点的问题。 
   
Select 
    (sysdate-(sysdate-3.111))*1440 
from 
    dual; 
   
(SYSDATE-(SYSDATE-3.111))*1440 
------------------------------ 
                     4479.83333  
   
当然，我们可以用ROUND函数（即取整函数）来解决这个问题，但是要记住我们必须首先把DATE数据类型转换成NUMBER数据类型。 
   
Select 
    round(to_number(sysdate-(sysdate-3.111))*1440) 
from 
    dual; 
   
ROUND(TO_NUMBER(SYSDATE-(SYSDATE-3.111))*1440) 
---------------------------------------------- 
                                           4480  
   
我们可以用这些函数把一个消逝时间近似转换成分钟并把这个值写入Oracle表格中。在这个例子里，我们有一个离线（logoff）系统级触发机制来计算已经开始的会话时间并把它放入一个Oracle STATSPACK USER_LOG扩展表格之中。 
   
Update 
    perfstat.stats$user_log 
set 
    elapsed_minutes = 
    round(to_number(logoff_time-logon_time)*1440) 
where 
    user = user_id 
and 
    elapsed_minutes is NULL; 
 
 
查出任一年月所含的工作日
CREATE OR REPLACE FUNCTION Get_WorkingDays(
  ny IN VARCHAR2
) RETURN INTEGER IS
/*------------------------------------------------------------------------------------------
函数名称：Get_WorkingDays
中文名称：求某一年月中共有多少工作日
作者姓名: XINGPING
编写时间: 2004-05-22
输入参数：NY:所求包含工作日数的年月，格式为yyyymm,如200405
返 回 值：整型值，包含的工作日数目。
算法描述：
    1).列举出参数给出的年月中的每一天。这里使用了一个表（ljrq是我的库中的一张表。这个表可以是有权访问的、记录条数至少为31的任意一张表或视图）来构造出某年月的每一天。
    2).用这些日期和一个已知星期几的日期相减(2001-12-30是星期天)，所得的差再对7求模。如果所求年月在2001-12-30以前，那么所得的差既是负数，求模后所得值范围为大于-6,小于0，如-1表示星期六,故先将求模的结果加7，再求7的模.
    3).过滤掉结果集中值为0和6的元素，然后求count,所得即为工作日数目。      
-------------------------------------------------------------------------------------------------*/
  Result INTEGER;
BEGIN
  SELECT COUNT(*) INTO Result
    FROM (SELECT MOD(MOD(q.rq-to_date('2001-12-30','yyyy-mm-dd'),7),7) weekday
            FROM ( SELECT to_date(ny||t.dd,'yyyymmdd') rq
                     FROM (SELECT substr(100+ROWNUM,2,2) dd 
                             FROM ljrq z WHERE Rownum<=31
                          ) t
                     WHERE to_date(ny||t.dd,'yyyymmdd') 
                       BETWEEN to_date(ny,'yyyymm') 
                           AND last_day(to_date(ny,'yyyymm'))
                 )q
         ) a   
    WHERE a.weekday NOT IN(0,6);    
  RETURN Result;  
END Get_WorkingDays;
 
 
______________________________________
 
 
还有一个版本
CREATE OR REPLACE FUNCTION Get_WorkingDays(
  ny IN VARCHAR2
) RETURN INTEGER IS
/*-----------------------------------------------------------------------------------------
函数名称：Get_WorkingDays
中文名称：求某一年月中共有多少工作日
作者姓名: XINGPING
编写时间: 2004-05-23
输入参数：NY:所求包含工作日数的年月，格式为yyyymm,如200405
返 回 值：整型值，包含的工作日数目。
算法描述：使用Last_day函数计算出参数所给年月共包含多少天，根据这个值来构造一个循环。在这个循环中先求这个月的每一天与一个已知是星期天的日期(2001-12-30是星期天)的差，所得的差再对7求模。如果所求日期在2001-12-30以前，那么所得的差既是负数，求模后所得值范围为大于-6,小于0，如-1表示星期六,故先将求模的结果加7，再求7的模. 如过所得值不等于0和6（即不是星期六和星期天），则算一个工作日。      
----------------------------------------------------------------------------------------*/
  Result INTEGER := 0;
  myts INTEGER;      --所给年月的天数
  scts INTEGER;      --某天距2001-12-30所差的天数
  rq   DATE;
  djt INTEGER := 1;   -- 
BEGIN
  myts := to_char(last_day(to_date(ny,'yyyymm')),'dd');  
  LOOP 
    rq := TO_date(ny||substr(100+djt,2),'yyyymmdd');
    scts := rq - to_date('2001-12-30','yyyy-mm-dd');
    IF MOD(MOD(scts,7)+7,7) NOT IN(0,6) THEN
      Result := Result + 1;
    END IF;
    djt := djt + 1;  
    EXIT WHEN djt>myts;
  END LOOP;  
  RETURN Result;  
END Get_WorkingDays;
 
 
以上两个版本的比较
 
 
第一个版本一条SQL语句就可以得出结果，不需要编程就可以达到目的。但需要使用任意一张有权访问的、记录条数至少为31的一张表或视图。
    第二个版本需要编程，但不需要表或者视图。
    这两个版本都还存在需要完善的地方，即没有考虑节日，如五一、十一、元旦、春节这些节假期都没有去除。这些节假日应该维护成一张表，然后通过查表来去除这些节假日。